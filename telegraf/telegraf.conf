
[global_tags]


[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  ## Log only error level messages.
  # quiet = false
  #logtarget = "file"
  #logfile = "logfile.txt"
  # logfile_rotation_interval = "0d"
  # logfile_rotation_max_size = "0MB"
  # logfile_rotation_max_archives = 5
  hostname = ""
  #omit_hostname = false



# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  urls = ["http://influxdb:8086"]

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "${INFLUXDB_DB}"

  ## HTTP Basic Auth
  username = "${INFLUXDB_USER}"
  password = "${INFLUXDB_USER_PASSWORD}"



[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a seperate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
  servers = ["tcp://hivemq:1883"]
 

  ## Topics that will be subscribed to.
  topics = [
  "test",
  ]

  ## The message topic will be stored in a tag specified by this value.  If set
  ## to the empty string no topic tag will be created.
  topic_tag = "topic"

  data_format = "value"
  data_type = "string"

[[processors.starlark]]
  namepass = ["mqtt_consumer"]
  script = "/usr/local/bin/myscript.star"